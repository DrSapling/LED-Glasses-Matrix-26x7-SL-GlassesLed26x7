// ALL FACES

const unsigned long bitmap_XX[13] PROGMEM = {
  0b00000010000010010100000000110000, // 27  16
  0b00000100110001100011000000000000, // 14   15
  0b00000010011000100011000000100000, // 26  16
  0b00001100000011000100000000010000, // 25   15
  0b00000000000000000000000000000000, // 12  16
  0b00000000000000000000000000000000, // 13   15
  0b00000000000000000000000000000000, // 21  16
  0b00000000000000000000000000000000, // 23   15
  0b00000000000000000000000000000000, // 22  16
  0b00001010000010000100000000110000, // 17   15
  0b00000100110000110011000000000000, // 18  16
  0b00000010011000101011000000000000, // 5    15
  0b00001100000001010100000000010000  // 19  16
};
const unsigned long bitmap_angry[13] PROGMEM = {
  0b00000010000000010100000000000000, // 27  16
  0b00000100100000000011000000000000, // 14   15
  0b00000000011000100000000000100000, // 26  16
  0b00000000000011000000000000010000, // 25   15
  0b00000000000000000000000000000000, // 12  16
  0b00000000000000000000000000000000, // 13   15
  0b00000000000000000000000000000000, // 21  16
  0b00000000000000000000000000000000, // 23   15
  0b00000000000000000000000000000000, // 22  16
  0b00000000000010000000000000110000, // 17   15
  0b00000000110000110000000000000000, // 18  16
  0b00000010001000000011000000000000, // 5    15
  0b00001100000000000100000000000000  // 19  16
};
const unsigned long bitmap_happy[13] PROGMEM = {
  0b00000000000010100000000000110000, // 27  16
  0b00000010111001001011000000000000, // 14   15
  0b00001010100000010110000000000000, // 26  16
  0b00000000011001100001000000110000, // 25   15
  0b00000000000010000000000000000000, // 12  16
  0b00000000000000000000000000000000, // 13   15
  0b00000000000000000000000000000000, // 21  16
  0b00000000000000000000000000000000, // 23   15
  0b00000000000000000000000000010000, // 22  16
  0b00000000110011001010000000100000, // 17   15
  0b00001110001000000101000000000000, // 18  16
  0b00001100101000101011000000000000, // 5    15
  0b00000000010001010000000000010000  // 19  16
};
const unsigned long bitmap_confused[13] PROGMEM = {
  0b00000010100000100010000000100000, // 27  16
  0b00001100011011000001000000010000, // 14   15
  0b00001000000010000100000000010000, // 26  16
  0b00001110111011101011000000100000, // 25   15
  0b00000000000000000000000000000000, // 12  16
  0b00000000000000000000000000000000, // 13   15
  0b00000000000000000000000000000000, // 21  16
  0b00000000000000000000000000000000, // 23   15
  0b00000000000000000000000000000000, // 22  16
  0b00000010111000001011000000100000, // 17   15
  0b00000110000000010000000000100000, // 18  16
  0b00000100111001100011000000000000, // 5    15
  0b00000000000000000000000000000000, // 19  16
};
const unsigned long bitmap_NONE[13] PROGMEM = {
  0b00000000000000000000000000000000, // 27  16
  0b00000000000000000000000000000000, // 14   15
  0b00000000000000000000000000000000, // 26  16
  0b00000000000000000000000000000000, // 25   15
  0b00000000000000000000000000000000, // 12  16
  0b00000000000000000000000000000000, // 13   15
  0b00000000000000000000000000000000, // 21  16
  0b00000000000000000000000000000000, // 23   15
  0b00000000000000000000000000000000, // 22  16
  0b00000000000000000000000000000000, // 17   15
  0b00000000000000000000000000000000, // 18  16
  0b00000000000000000000000000000000, // 5    15
  0b00000000000000000000000000000000, // 19  16
};
const unsigned long bitmap_FULL[13] PROGMEM = {
  0b00000110111011111111000000110000, // 27  16
  0b00001110111011111011000000110000, // 14   15
  0b00001010111011111111000000110000, // 26  16
  0b00001100111011111111000000110000, // 25   15
  0b00001110111011111110000000110000, // 12  16
  0b00001110111011111101000000110000, // 13   15
  0b00001110110011111111000000110000, // 21  16
  0b00001110011011111111000000110000, // 23   15
  0b00001110101011111111000000110000, // 22  16
  0b00001110111011011111000000110000, // 17   15
  0b00001110111010111111000000110000, // 18  16
  0b00001110111011111111000000010000, // 5    15
  0b00001110111001111111000000110000, // 19  16
};


// List of pins for Charlieplexing
//                     0   1   2   3   4   5   6   7   8   9   10  11  12    13  14  15
const short pins[] = { 27, 14, 26, 25, 12, 13, 21, 23, 22, 17, 18, 5, 19,     4, 16, 15 };    // 4, 16, 15 are used only for digital low  (32 CHANGED TO 21, 33 to 23)
const short numPins = sizeof(pins) / sizeof(pins[0]);

unsigned long micros_display_update = 0;
short section = 0;   // for keeping track of next section on display to update (like i in for loop)
//const unsigned long *selected_face_ptr = bitmap_XX;
const unsigned long *selected_face_ptr = bitmap_FULL;

unsigned long millis_face_counter = 0;
short face_counter = 0;




void setup() {
  REG_WRITE(GPIO_OUT_W1TC_REG , 0b11111111111111111111111111111111); // LOW
  REG_WRITE(GPIO_ENABLE_W1TC_REG , 0b11111111111111111111111111111111); // INPUT

}



void loop() {

  // DISPLAY UPDATE - every 1ms
  
  if (micros() >= micros_display_update + 1000) {

    micros_display_update = micros();
    REG_WRITE(GPIO_OUT_W1TC_REG , 0b11111111111111111111111111111111); // LOW
    REG_WRITE(GPIO_ENABLE_W1TC_REG , 0b11111111111111111111111111111111); // INPUT

    if (section > 12)
      section = 0;

    REG_WRITE(GPIO_ENABLE_W1TS_REG, selected_face_ptr[section]); // OUTPUT
    // REG_WRITE(GPIO_OUT_W1TC_REG, (1 << pins[section])); // LOW
    REG_WRITE(GPIO_OUT_W1TC_REG, selected_face_ptr[section]); // LOW
    pinMode(pins[section], OUTPUT);
    digitalWrite(pins[section], HIGH);
    // if (section % 2 == 0)
    //   drawSectionEvenPin(section, selected_face_ptr);
    // else
    //   drawSectionOddPin(section, selected_face_ptr);

    section++;
  }



  // FACE CHANGE - every 1s
  // if (millis() >= millis_face_counter + 1000) {
  //   millis_face_counter = millis();

  //   switch(face_counter++) {
  //     case 0:
  //       selected_face_ptr = bitmap_happy;
  //       break;
  //     case 1:
  //       selected_face_ptr = bitmap_confused;
  //       break;
  //     case 2:
  //       selected_face_ptr = bitmap_angry;
  //       break;
  //     case 3:
  //       selected_face_ptr = bitmap_XX;
  //       break;
  //     case 4:
  //       selected_face_ptr = bitmap_FULL;
  //       break;
  //     case 5:
  //       selected_face_ptr = bitmap_NONE;
  //       face_counter = 0;
  //       break;
  //   }
  //   //face_counter++;
  // }
}